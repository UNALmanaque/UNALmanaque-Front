{"remainingRequest":"/home/hamed/unalmanaque-front/node_modules/babel-loader/lib/index.js!/home/hamed/unalmanaque-front/node_modules/eslint-loader/index.js??ref--13-0!/home/hamed/unalmanaque-front/src/store/index.js","dependencies":[{"path":"/home/hamed/unalmanaque-front/src/store/index.js","mtime":1618172756035},{"path":"/home/hamed/unalmanaque-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hamed/unalmanaque-front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/hamed/unalmanaque-front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlU3RvcmUgfSBmcm9tICd2dWV4JzsKaW1wb3J0IFZ1ZXhQZXJzaXN0IGZyb20gJ3Z1ZXgtcGVyc2lzdCc7CnZhciB2dWV4TG9jYWxTdG9yYWdlID0gbmV3IFZ1ZXhQZXJzaXN0KHsKICBrZXk6ICd2dWV4JywKICAvLyBUaGUga2V5IHRvIHN0b3JlIHRoZSBzdGF0ZSBvbiBpbiB0aGUgc3RvcmFnZSBwcm92aWRlci4KICBzdG9yYWdlOiB3aW5kb3cubG9jYWxTdG9yYWdlIC8vIG9yIHdpbmRvdy5zZXNzaW9uU3RvcmFnZSBvciBsb2NhbEZvcmFnZQogIC8vIEZ1bmN0aW9uIHRoYXQgcGFzc2VzIHRoZSBzdGF0ZSBhbmQgcmV0dXJucyB0aGUgc3RhdGUgd2l0aCBvbmx5IHRoZSBvYmplY3RzIHlvdSB3YW50IHRvIHN0b3JlLgogIC8vIHJlZHVjZXI6IHN0YXRlID0+IHN0YXRlLAogIC8vIEZ1bmN0aW9uIHRoYXQgcGFzc2VzIGEgbXV0YXRpb24gYW5kIGxldHMgeW91IGRlY2lkZSBpZiBpdCBzaG91bGQgdXBkYXRlIHRoZSBzdGF0ZSBpbiBsb2NhbFN0b3JhZ2UuCiAgLy8gZmlsdGVyOiBtdXRhdGlvbiA9PiAodHJ1ZSkKCn0pOwp2YXIgc3RvcmUgPSBjcmVhdGVTdG9yZSh7CiAgcGx1Z2luczogW3Z1ZXhMb2NhbFN0b3JhZ2UucGx1Z2luXSwKICBzdGF0ZTogZnVuY3Rpb24gc3RhdGUoKSB7CiAgICByZXR1cm4gewogICAgICBjdXJyZW50VXNlcjoge30sCiAgICAgIGF1dGhUb2tlbjogbnVsbAogICAgfTsKICB9LAogIG11dGF0aW9uczogewogICAgc2V0Q3VycmVudFVzZXI6IGZ1bmN0aW9uIHNldEN1cnJlbnRVc2VyKHN0YXRlLCB1c2VyKSB7CiAgICAgIHN0YXRlLmN1cnJlbnRVc2VyID0gdXNlcjsKICAgIH0sCiAgICBzZXRBdXRoVG9rZW46IGZ1bmN0aW9uIHNldEF1dGhUb2tlbihzdGF0ZSwgdG9rZW4pIHsKICAgICAgc3RhdGUuYXV0aFRva2VuID0gdG9rZW47CiAgICB9CiAgfSwKICBnZXR0ZXJzOiB7CiAgICBjdXJyZW50VXNlcjogZnVuY3Rpb24gY3VycmVudFVzZXIoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmN1cnJlbnRVc2VyOwogICAgfSwKICAgIGF1dGhUb2tlbjogZnVuY3Rpb24gYXV0aFRva2VuKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5hdXRoVG9rZW47CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBzZXRVc2VyOiBmdW5jdGlvbiBzZXRVc2VyKGNvbnRleHQsIHBheWxvYWQpIHsKICAgICAgY29udGV4dC5jb21taXQoJ3NldEN1cnJlbnRVc2VyJywgcGF5bG9hZCk7CiAgICB9LAogICAgc2V0VG9rZW46IGZ1bmN0aW9uIHNldFRva2VuKGNvbnRleHQsIHBheWxvYWQpIHsKICAgICAgY29udGV4dC5jb21taXQoJ3NldEF1dGhUb2tlbicsIHBheWxvYWQpOwogICAgfQogIH0KfSk7CmV4cG9ydCBkZWZhdWx0IHN0b3JlOw=="},{"version":3,"sources":["/home/hamed/unalmanaque-front/src/store/index.js"],"names":["createStore","VuexPersist","vuexLocalStorage","key","storage","window","localStorage","store","plugins","plugin","state","currentUser","authToken","mutations","setCurrentUser","user","setAuthToken","token","getters","actions","setUser","context","payload","commit","setToken"],"mappings":"AAAA,SAASA,WAAT,QAA4B,MAA5B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,IAAMC,gBAAgB,GAAG,IAAID,WAAJ,CAAgB;AACvCE,EAAAA,GAAG,EAAE,MADkC;AAC1B;AACbC,EAAAA,OAAO,EAAEC,MAAM,CAACC,YAFuB,CAET;AAC9B;AACA;AACA;AACA;;AANuC,CAAhB,CAAzB;AASA,IAAMC,KAAK,GAAGP,WAAW,CAAC;AACxBQ,EAAAA,OAAO,EAAE,CAACN,gBAAgB,CAACO,MAAlB,CADe;AAExBC,EAAAA,KAFwB,mBAEhB;AACN,WAAO;AACLC,MAAAA,WAAW,EAAE,EADR;AAELC,MAAAA,SAAS,EAAE;AAFN,KAAP;AAID,GAPuB;AAQxBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,cADS,0BACMJ,KADN,EACaK,IADb,EACmB;AAC1BL,MAAAA,KAAK,CAACC,WAAN,GAAoBI,IAApB;AACD,KAHQ;AAITC,IAAAA,YAJS,wBAIIN,KAJJ,EAIWO,KAJX,EAIkB;AACzBP,MAAAA,KAAK,CAACE,SAAN,GAAkBK,KAAlB;AACD;AANQ,GARa;AAgBxBC,EAAAA,OAAO,EAAE;AACPP,IAAAA,WAAW,EAAE,qBAACD,KAAD;AAAA,aAAWA,KAAK,CAACC,WAAjB;AAAA,KADN;AAEPC,IAAAA,SAAS,EAAE,mBAACF,KAAD;AAAA,aAAWA,KAAK,CAACE,SAAjB;AAAA;AAFJ,GAhBe;AAoBxBO,EAAAA,OAAO,EAAE;AACPC,IAAAA,OADO,mBACCC,OADD,EACUC,OADV,EACmB;AACxBD,MAAAA,OAAO,CAACE,MAAR,CAAe,gBAAf,EAAiCD,OAAjC;AACD,KAHM;AAIPE,IAAAA,QAJO,oBAIEH,OAJF,EAIWC,OAJX,EAIoB;AACzBD,MAAAA,OAAO,CAACE,MAAR,CAAe,cAAf,EAA+BD,OAA/B;AACD;AANM;AApBe,CAAD,CAAzB;AA8BA,eAAef,KAAf","sourcesContent":["import { createStore } from 'vuex';\nimport VuexPersist from 'vuex-persist';\n\nconst vuexLocalStorage = new VuexPersist({\n  key: 'vuex', // The key to store the state on in the storage provider.\n  storage: window.localStorage, // or window.sessionStorage or localForage\n  // Function that passes the state and returns the state with only the objects you want to store.\n  // reducer: state => state,\n  // Function that passes a mutation and lets you decide if it should update the state in localStorage.\n  // filter: mutation => (true)\n});\n\nconst store = createStore({\n  plugins: [vuexLocalStorage.plugin],\n  state() {\n    return {\n      currentUser: {},\n      authToken: null,\n    };\n  },\n  mutations: {\n    setCurrentUser(state, user) {\n      state.currentUser = user;\n    },\n    setAuthToken(state, token) {\n      state.authToken = token;\n    },\n  },\n  getters: {\n    currentUser: (state) => state.currentUser,\n    authToken: (state) => state.authToken,\n  },\n  actions: {\n    setUser(context, payload) {\n      context.commit('setCurrentUser', payload);\n    },\n    setToken(context, payload) {\n      context.commit('setAuthToken', payload);\n    },\n  },\n});\n\nexport default store;\n"]}]}